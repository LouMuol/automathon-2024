
Using cuda
Training model:
torch.Size([32, 3, 10, 256, 256])
===============================================================================================
Layer (type:depth-idx)                        Output Shape              Param #
===============================================================================================
DeepfakeDetector                              [32, 1]                   --
├─ResNet: 1-1                                 [32, 1000]                --
│    └─Conv2d: 2-1                            [32, 64, 128, 128]        (9,408)
│    └─BatchNorm2d: 2-2                       [32, 64, 128, 128]        (128)
│    └─ReLU: 2-3                              [32, 64, 128, 128]        --
│    └─MaxPool2d: 2-4                         [32, 64, 64, 64]          --
│    └─Sequential: 2-5                        [32, 64, 64, 64]          --
│    │    └─BasicBlock: 3-1                   [32, 64, 64, 64]          (73,984)
│    │    └─BasicBlock: 3-2                   [32, 64, 64, 64]          (73,984)
│    └─Sequential: 2-6                        [32, 128, 32, 32]         --
│    │    └─BasicBlock: 3-3                   [32, 128, 32, 32]         (230,144)
│    │    └─BasicBlock: 3-4                   [32, 128, 32, 32]         (295,424)
│    └─Sequential: 2-7                        [32, 256, 16, 16]         --
│    │    └─BasicBlock: 3-5                   [32, 256, 16, 16]         (919,040)
│    │    └─BasicBlock: 3-6                   [32, 256, 16, 16]         (1,180,672)
│    └─Sequential: 2-8                        [32, 512, 8, 8]           --
│    │    └─BasicBlock: 3-7                   [32, 512, 8, 8]           (3,673,088)
│    │    └─BasicBlock: 3-8                   [32, 512, 8, 8]           (4,720,640)
│    └─SelectAdaptivePool2d: 2-9              [32, 512]                 --
│    │    └─AdaptiveAvgPool2d: 3-9            [32, 512, 1, 1]           --
│    │    └─Flatten: 3-10                     [32, 512]                 --
│    └─Linear: 2-10                           [32, 1000]                (513,000)
├─Flatten: 1-2                                [32, 1000]                --
├─Linear: 1-3                                 [32, 1]                   1,001
├─Sigmoid: 1-4                                [32, 1]                   --
===============================================================================================
Total params: 11,690,513
Trainable params: 1,001
Non-trainable params: 11,689,512
Total mult-adds (G): 75.82
===============================================================================================
Input size (MB): 251.66
Forward/backward pass size (MB): 1661.20
Params size (MB): 46.76
Estimated Total Size (MB): 1959.62
===============================================================================================
Training...
Epoch 0
  0%|          | 0/310 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "/raid/home/automathon_2024/account13/anon/automathon-2024/run.py", line 292, in <module>
    label_pred = model(X)
  File "/raid/home/automathon_2024/account13/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/raid/home/automathon_2024/account13/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/raid/home/automathon_2024/account13/anon/automathon-2024/run.py", line 255, in forward
    y = self.encoder(y)
  File "/raid/home/automathon_2024/account13/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/raid/home/automathon_2024/account13/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/raid/home/automathon_2024/account13/.local/lib/python3.10/site-packages/timm/models/resnet.py", line 578, in forward
    x = self.forward_features(x)
  File "/raid/home/automathon_2024/account13/.local/lib/python3.10/site-packages/timm/models/resnet.py", line 557, in forward_features
    x = self.conv1(x)
  File "/raid/home/automathon_2024/account13/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/raid/home/automathon_2024/account13/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/raid/home/automathon_2024/account13/.local/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 460, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/raid/home/automathon_2024/account13/.local/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 456, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Given groups=1, weight of size [64, 3, 7, 7], expected input[32, 10, 256, 256] to have 3 channels, but got 10 channels instead
torch.Size([32, 10, 3, 256, 256])